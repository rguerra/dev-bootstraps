---
- include_vars: 
    file: secrets.yml

# This playbook contains docker actions that will be run on "remote" host.

- name: "[docker.yml] Get Ubuntu version"
  shell: lsb_release -cs
  register: ubuntu_version
  tags:
    - docker

# TODO: Figure out how to use the ansible docker instead of a shell
# curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
# - name: Add Docker s official GPG key
#   apt_key:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     state: present
#   tags:
#     - docker
- name: "[docker.yml] Add Docker s official GPG key"
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  tags:
    - docker
 
# sudo apt-key fingerprint 0EBFCD88
- name: "[docker.yml] Verify that we have the key with the fingerprint"
  apt_key:
    id: 0EBFCD88
    state: present
  tags:
    - docker

# sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"
- name: "[docker.yml] Set up the stable repository"
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_version.stdout }} stable"
    state: present
    update_cache: yes
  tags:
    - docker
 
# sudo apt-get update
- name: "[docker.yml] Update apt packages"
  apt:
    update_cache: yes
  tags:
    - docker
 
# sudo apt-get install docker-ce=18.03.*
- name: "[docker.yml] Install docker"
  apt:
    name: ['docker-ce']
    state: present
    update_cache: yes
  notify: Start docker on boot
  tags:
    - docker
 
# sudo groupadd docker
- name: "[docker.yml] Create 'docker' group"
  group:
    name: "{{ docker_group }}"
    state: present
  tags:
    - docker
 
# sudo usermod -aG docker ubuntu
- name: "[docker.yml] Add remote 'ubuntu' user to 'docker' group"
  user:
    name: "{{ item }}"
    group: "{{ docker_group }}"
    append: yes
  with_items: 
    - "{{ default_user }}"
    - "{{ default_user }}"
  tags:
    - docker
- name: "[docker.yml] Installing docker python package"
  pip:
    name:
      - docker
  tags:
    - docker

- name: "[docker.yml] Get the uname_s "
  shell: uname -s
  register: uname_s
  tags:
    - docker
- name: "[docker.yml] Get the uname_m"
  shell: uname -m
  register: uname_m
  tags:
    - docker
- name: "[docker.yml] Download docker-compose"
  get_url:
    url: "http://github.com/docker/compose/releases/download/{{docker_compose_version}}/docker-compose-{{ uname_s.stdout }}-{{ uname_m.stdout }}"
    dest: /usr/local/bin/docker-compose
    mode: 0550
  tags:
    - docker
- name: "[docker.yml] Save docker-compose --version"
  shell: docker-compose --version
  register: docker_compose_version
  tags:
    - docker
- name: "[docker.yml] Debug docker-compose --version"
  debug:
    var: docker_compose_version
  tags:
    - docker
- name: "[docker.yml] Add docker-compose to docker group"
  file:
    path: /usr/local/bin/docker-compose
    owner: "{{ default_user }}"
    group: docker
    mode : '0755'

