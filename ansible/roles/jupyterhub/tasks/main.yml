---

- name: "[jupyterlab.yml] JupyterHub"
  file:
    path: "/home/{{ remote_user }}/jupyterhub"
    state: directory
- name: pull image
  docker_image:
    #name: jupyter/datascience-notebook
    name: jupyterhub/jupyterhub
    
- name: "[jupyterlab.yml] creating docker-compose"
  become: yes
  become_user: root
  template:
    src: docker-compose.yaml.j2
    dest: "/home/{{ remote_user }}/jupyterhub/docker-compose.yaml"
    owner: "{{ remote_user }}"

- name: "[jupyterlab.yml] creating docker-compose"
  become: yes
  become_user: root
  template:
    src: nginx.conf.j2
    dest: "/home/{{ remote_user }}/jupyterhub/nginx.conf"
    owner: "{{ remote_user }}"
- name: Create service 
  become: yes
  become_user: root
  template:
    src: jupyter_notebook_config.py.j2
    dest: "/home/{{ remote_user }}/jupyterhub/jupyter_notebook_config.py"
    owner: "{{ remote_user }}"

#- name: Create service 
#  become: yes
#  become_user: root
#  template:
#    src: jupyterlab.j2
#    dest: /etc/systemd/system/jupyterlab.service
#    #owner: "{{ remote_user }}"

#- name: Start jupyter service
#  systemd:
#    name: jupyterlab.service
#    daemon_reload: yes
#    enabled: yes
#    state: started
#  become: yes
#  become_user: root

#- name: Adding enabled site
#  template:
#    src: nginx_proxy.j2
#    dest: /etc/nginx/sites-available/lab
#  become: yes
#  become_user: root

##- name: ansible create directory example
##  file:
##    path: /etc/nginx/sites-enabled
##    state: directory

#- name: Soft Link
#  file:
#    src: /etc/nginx/sites-available/lab
#    dest: /etc/nginx/sites-enabled/lab
#    state: link
#  become: yes
#  become_user: root
#- name: restart nginx
#  service:
#      name: nginx
#      state: restarted
#  become: yes
#  become_user: root
