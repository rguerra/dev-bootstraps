---
- include_tasks: conda.yml

- name: Add the relevant GPG key
  apt_key:
    id: E298A3A825C0D65DFD57CBB651716619E084DAB9
    keyserver: keyserver.ubuntu.com
    state: present
  become: yes
  become_user: root
  tags:
    - jupyterlab


- name: Set up the stable repository
  apt_repository:
    repo: "deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/"
    state: present
    update_cache: yes
  become: yes
  become_user: root
  tags:
    - jupyterlab
- name: Update apt packages
  apt:
    update_cache: yes
  become: yes
  become_user: root
  tags:
    - jupyterlab

- name: Install base packages
  apt: name={{ item }} state=present
  with_items:
    - bash-completion
    - python3-dev
    - python3-pip
    - libcurl4-openssl-dev
    - libssl-dev
    - libxml2-dev
    - libffi-dev
    - libxslt1-dev
    - libjpeg8-dev
    - zlib1g-dev
    - r-base
    - r-base-dev
    - r-cran-littler
  become: yes
  become_user: root
  tags:
    - jupyterlab
#- name: Get R_LIBS_USER
#  command: /usr/bin/r -e 'cat(Sys.getenv("R_LIBS_USER")'
#  become: no
#  register: r_libs_user
#- name: Create directory for user libraries
#  file: path={{ r_libs_user.stdout }} state=directory
#  become: no
#- name: Instal R Dependencies
#  command: |
#    /usr/bin/r -e 'devtools::install_github("IRkernel/IRkernel"); IRkernel::installspec(user = FALSE)'
#  become: yes
#  become_user: root
- name: Upgrade pip
  pip: name=pip state=latest executable=pip3
  tags:
    - jupyterlab
- name: Installing Jupyterlab
  pip:
    name: jupyterlab
    executable: pip3
- name: Create service 
  become: yes
  become_user: root
  template:
    src: jupyterlab.j2
    dest: /etc/systemd/system/jupyterlab.service
    owner: "{{ remote_user }}"
- name: Start jupyter service
  systemd:
    name: jupyterlab.service
    daemon_reload: yes
    enabled: yes
    state: started
  become: yes
  become_user: root
  tags: jupyterlab
- name: Instal R Kernel
  #command: |
  #  /usr/bin/r -e 'install.packages(c("pbdZMQ", "repr", "devtools"), repos="https://cran.rstudio.com"); devtools::install_github("IRkernel/IRdisplay")'
  shell: |
    /usr/bin/r -e 'install.packages(c("repr", "IRdisplay", "IRkernel"), type="source"); IRkernel::installspec()'
  #environment:
  #  PATH: "/home/{{ remote_user }}/.local/bin:{{ lookup('env', 'PATH') }}"
  args:
    executable: /bin/bash
  #environment:
  #  PATH: "/home/{{ remote_user }}/.local/bin:{{ lookup('env', 'PATH') }}"
  
  become: yes
  become_user: root
- name: Adding enabled site
  template:
    src: nginx_proxy.j2
    dest: /etc/nginx/sites-available/lab
  become: yes
  become_user: root
#- name: ansible create directory example
#  file:
#    path: /etc/nginx/sites-enabled
#    state: directory

- name: Soft Link
  file:
    src: /etc/nginx/sites-available/lab
    dest: /etc/nginx/sites-enabled/lab
    state: link
  become: yes
  become_user: root
- name: restart nginx
  service:
      name: nginx
      state: restarted
  become: yes
  become_user: root
